{"version":3,"sources":["webpack:///./src/components/shared/Typography.ts","webpack:///./src/components/shared/Banner.ts","webpack:///./src/templates/article.tsx"],"names":["Paragraph","styled","p","fonts","muli","Title","teko","div","BannerTitle","fontSizes","xxxl","mediaMin","md","BannerSubTitle","lg","BannerLinks","BorderedButton","Link","mixins","transitionAll","SkillList","Skill","span","roboto","Banner","alignment","sm","Image","isBackgroundDark","themes","dark","reverse","light","ArticleMain","grid","inlineLink","xl","xxl","theme","surface","pageQuery","ArticlePage","data","markdownRemark","frontmatter","html","title","bannerImage","bannerTitle","bannerSubTitle","isBannerDark","childImageSharp","fluid","dangerouslySetInnerHTML","__html"],"mappings":"2VAGaA,EAAYC,IAAOC,EAAV,2EAAGD,CAAH,4FAELE,IAAMC,MAOVC,EAAQJ,IAAOC,EAAV,uEAAGD,CAAH,gGACDE,IAAMG,M,GAOIL,IAAOM,IAAV,6EAAGN,CAAH,oC,gTCZjB,IAAMO,EAAcP,YAAOI,GAAV,sEAAGJ,CAAH,kDACTQ,IAAUC,KAGrBC,IAASC,GAJW,MAOXC,EAAiBZ,YAAOD,GAAV,yEAAGC,CAAH,wEACZQ,IAAUG,GAGrBD,IAASC,GAJc,IAIEH,IAAUK,KAG1BC,EAAcd,IAAOM,IAAV,sEAAGN,CAAH,sCAKXe,EAAiBf,YAAOgB,QAAV,yEAAGhB,CAAH,yGACvBiB,IAAOZ,KACPY,IAAOC,cACIV,IAAUK,IAOZM,EAAYnB,IAAOM,IAAV,oEAAGN,CAAH,kCAKToB,EAAQpB,IAAOqB,KAAV,gEAAGrB,CAAH,sDACdiB,IAAOK,QAYLC,EAASvB,IAAOM,IAAV,yDAAGN,CAAH,6ZAIK,qBAAGwB,WAA6B,WAM7Cd,IAASe,GAVD,KAYRC,IAaAN,GAES,qBAAGO,iBACSC,IAAOC,KAAKC,QAAUF,IAAOG,MAAMD,WAI9C,qBAAGH,iBACQC,IAAOC,KAAKC,QAAUF,IAAOG,MAAMD,UAExDf,GACgB,qBAAGY,iBACEC,IAAOC,KAAKC,QAAUF,IAAOG,MAAMD,WAC/C,qBAAGH,iBACSC,IAAOC,KAAKC,QAAUF,IAAOG,MAAMD,WAE7C,qBAAGH,iBACSC,IAAOG,MAAMD,QAAUF,IAAOC,KAAKC,WACpC,qBAAGH,iBACFC,IAAOC,KAAKC,QAAUF,IAAOG,MAAMD,WAK/CP,O,6YCxEf,IAAMS,EAAchC,IAAOM,IAAV,2EAAGN,CAAH,2eAEXiB,IAAOgB,OAKPhB,IAAOd,KAELc,IAAOiB,WAME1B,IAAU2B,GACrBlB,IAAOZ,KACPK,IAASe,GAjBE,IAiBcjB,IAAU4B,MAmBjB,qBAAGC,MAAkBC,WAwChCC,EAAY,aAqBVC,UA7C0B,SAAC,GAAa,QAAXC,KACPC,eAA3BC,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,KACbC,EAAkEF,EAAlEE,MAAOC,EAA2DH,EAA3DG,YAAaC,EAA8CJ,EAA9CI,YAAaC,EAAiCL,EAAjCK,eAAgBC,EAAiBN,EAAjBM,aACzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKJ,MAAOA,IACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGC,GAAeA,EAAYI,gBAAgBC,OAAS,kBAAC,IAAD,CAAQxB,iBAAkBsB,GAC7E,kBAAC,IAAD,CAAOE,MAAOL,EAAYI,gBAAgBC,QACzCJ,GAAe,kBAAC,IAAD,KAAcA,GAC7BC,GAAkB,kBAAC,IAAD,KAAiBA,IAEtC,kBAAChB,EAAD,CAAaoB,wBAAyB,CAAEC,OAAQT,MAElD,kBAAC,IAAD,MACA,kBAAC,IAAD","file":"component---src-templates-article-tsx-4d1e9a9a3fdb4dbf49e5.js","sourcesContent":["import styled from 'styled-components'\nimport { fonts } from '@theme/styles'\n\nexport const Paragraph = styled.p`\n  /* color: ${props => props.theme.textColor}; */\n  font-family: ${fonts.muli};\n  font-size: 1.1rem;\n  letter-spacing: 0.03rem;\n  margin: 2rem 0;\n  line-height: 150%;\n`\n\nexport const Title = styled.p`\n  font-family: ${fonts.teko};\n  font-size: 2rem;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: 300;\n  /* color: ${props => props.theme.textColor}; */\n`\nexport const TextContent = styled.div`\n  max-width: 50rem;\n  margin: 3rem 0;\n`\n","import styled from 'styled-components'\nimport Image from './Image'\nimport { Link } from 'gatsby'\nimport { Title, Paragraph } from './Typography'\nimport { themes, fontSizes } from '@theme/styles'\nimport mediaMin from '@theme/media'\nimport mixins from '@theme/mixins'\n\nexport const BannerTitle = styled(Title)`\n  font-size: ${fontSizes.xxxl};\n  line-height: 100%;\n  margin: 0 0;\n  ${mediaMin.md`line-height: 3.5rem;`}\n`\n\nexport const BannerSubTitle = styled(Paragraph)`\n  font-size: ${fontSizes.md};\n  font-weight: 500;\n  margin: 1rem 0 2.5rem 0 !important;\n  ${mediaMin.md`font-size: ${fontSizes.lg}`}\n`\n\nexport const BannerLinks = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const BorderedButton = styled(Link)`\n  ${mixins.teko};\n  ${mixins.transitionAll};\n  font-size: ${fontSizes.lg};\n  text-decoration: none;\n  border: 2px solid;\n  margin-right: 2rem;\n  padding: 0.8rem 1.5rem;\n`\n\nexport const SkillList = styled.div`\n  display: block;\n  margin: 2rem 0;\n`\n\nexport const Skill = styled.span`\n  ${mixins.roboto}\n\n  &:not(:first-child)::before {\n    content: '  Â·  ';\n  }\n`\n\ninterface BannerProps {\n  alignment?: string\n  isBackgroundDark?: boolean\n}\n\nconst Banner = styled.div<BannerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: ${({ alignment }) => alignment || 'center'};\n  margin: 2rem 0;\n  min-height: 30rem;\n  position: relative;\n  padding: 1rem;\n\n  ${mediaMin.sm`padding-left: 3rem;`}\n\n  ${Image} {\n    filter: brightness(75%);\n    position: absolute !important;\n    border-radius: 0;\n    margin: 0;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n\n  p,\n  ${Skill} {\n    /* margin: 0.5rem 0; */\n    color: ${({ isBackgroundDark }) =>\n      isBackgroundDark ? themes.dark.reverse : themes.light.reverse} !important;\n  }\n  a > svg {\n    margin-right: 1rem;\n    stroke: ${({ isBackgroundDark }) =>\n      isBackgroundDark ? themes.dark.reverse : themes.light.reverse};\n  }\n  ${BorderedButton} {\n    border-color: ${({ isBackgroundDark }) =>\n      isBackgroundDark ? themes.dark.reverse : themes.light.reverse};\n    color: ${({ isBackgroundDark }) =>\n      isBackgroundDark ? themes.dark.reverse : themes.light.reverse};\n    &:hover {\n      color: ${({ isBackgroundDark }) =>\n        isBackgroundDark ? themes.light.reverse : themes.dark.reverse};\n      background-color: ${({ isBackgroundDark }) =>\n        isBackgroundDark ? themes.dark.reverse : themes.light.reverse};\n    }\n  }\n`\n\nexport default Banner\n","import React from 'react'\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport SEO from '@components/shared/seo'\nimport Layout from '@components/shared/Layout'\nimport Content from '@components/shared/Content'\nimport Banner, { BannerTitle, BannerSubTitle } from '@components/shared/Banner'\nimport Image from '@components/shared/Image'\nimport ThemedContext from '@theme/ThemeContext'\nimport GlobalStyle from '@theme/Global'\nimport Sidebar from '@components/shared/Sidebar'\nimport Header from '@components/Header'\nimport Footer from '@components/Footer'\nimport mixins from '@theme/mixins'\nimport { fontSizes } from '@theme/styles'\nimport mediaMin from '@theme/media'\n\ninterface DataProps {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string,\n        bannerImage?: any,\n        bannerTitle: string,\n        bannerSubTitle: string,\n        isBannerDark: boolean\n      }\n      html: string\n    }\n  }\n}\n\nconst ArticleMain = styled.div`\n  blockquote{\n    ${mixins.grid()};\n    margin: 0;\n  }\n\n  p{\n    ${mixins.muli};\n    a{\n      ${mixins.inlineLink};\n    }\n  }\n\n  h1{\n    margin-bottom: 3rem;\n    font-size: ${fontSizes.xl};\n    ${mixins.teko};\n    ${mediaMin.sm`font-size: ${fontSizes.xxl}`};\n  }\n\n\n  img{\n    box-shadow: none !important;\n  }\n  div{\n    margin: 4rem 0;\n    max-width: 50rem;\n  }\n  \n\n  .gatsby-resp-image-wrapper{\n    height: 100%;\n    \n  }\n  .gatsby-resp-image-background-image{\n    background-image: none !important;\n    background-color: ${({ theme }) => theme.surface};\n\n  }\n  .gatsby-resp-image-link{\n    height: 100%;\n    display: flex !important;\n    flex-direction: column;\n    justify-content: center;\n  }\n  img.gatsby-resp-image-image{\n    height: auto !important;\n    top: 50% !important;\n    margin-top: -50% !important;\n  }\n`\n\nconst ArticlePage: React.FC<DataProps> = ({ data }) => {\n  const { frontmatter, html } = data.markdownRemark\n  const { title, bannerImage, bannerTitle, bannerSubTitle, isBannerDark } = frontmatter\n  return (\n    <ThemedContext>\n      <GlobalStyle />\n      <SEO title={title} />\n      <Layout>\n        <Header />\n        <Content>\n          {bannerImage && bannerImage.childImageSharp.fluid && <Banner isBackgroundDark={isBannerDark}>\n            <Image fluid={bannerImage.childImageSharp.fluid} />\n            {bannerTitle && <BannerTitle>{bannerTitle}</BannerTitle>}\n            {bannerSubTitle && <BannerSubTitle>{bannerSubTitle}</BannerSubTitle>}\n          </Banner> }\n          <ArticleMain dangerouslySetInnerHTML={{ __html: html }} />\n        </Content>\n        <Sidebar />\n        <Footer />\n      </Layout>\n    </ThemedContext>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        bannerImage {\n             childImageSharp {\n                fluid(maxWidth: 800, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n        }\n        bannerTitle\n        bannerSubTitle\n        isBannerDark\n      }\n    }\n  }\n`;\n\nexport default ArticlePage\n"],"sourceRoot":""}