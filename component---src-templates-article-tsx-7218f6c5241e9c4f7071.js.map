{"version":3,"sources":["webpack:///./src/templates/article.tsx"],"names":["ArticleMain","styled","div","mixins","grid","muli","fontSizes","xl","teko","mediaMin","sm","xxl","theme","surface","pageQuery","ArticlePage","data","markdownRemark","frontmatter","html","title","bannerImage","bannerTitle","bannerSubTitle","isBannerDark","childImageSharp","fluid","isBackgroundDark","dangerouslySetInnerHTML","__html"],"mappings":"scAgCA,IAAMA,EAAcC,IAAOC,IAAV,2EAAGD,CAAH,2hBAEXE,IAAOC,OAKPD,IAAOE,KAKIC,IAAUC,GACrBJ,IAAOK,KACPC,IAASC,GAdE,IAccJ,IAAUK,MAkBjB,qBAAGC,MAAkBC,WAwChCC,EAAY,aAqBVC,UA7C0B,SAAC,GAAa,QAAXC,KACPC,eAA3BC,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,KACbC,EAAkEF,EAAlEE,MAAOC,EAA2DH,EAA3DG,YAAaC,EAA8CJ,EAA9CI,YAAaC,EAAiCL,EAAjCK,eAAgBC,EAAiBN,EAAjBM,aACzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKJ,MAAOA,IACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGC,GAAeA,EAAYI,gBAAgBC,OAAS,kBAAC,IAAD,CAAQC,iBAAkBH,GAC7E,kBAAC,IAAD,CAAOE,MAAOL,EAAYI,gBAAgBC,QACzCJ,GAAe,kBAAC,IAAD,KAAcA,GAC7BC,GAAkB,kBAAC,IAAD,KAAiBA,IAEtC,kBAACvB,EAAD,CAAa4B,wBAAyB,CAAEC,OAAQV,MAElD,kBAAC,IAAD,MACA,kBAAC,IAAD","file":"component---src-templates-article-tsx-7218f6c5241e9c4f7071.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport SEO from '@components/shared/seo'\nimport Layout from '@components/shared/Layout'\nimport Content from '@components/shared/Content'\nimport Banner, { BannerTitle, BannerSubTitle } from '@components/shared/Banner'\nimport Image from '@components/shared/Image'\nimport ThemedContext from '@theme/ThemeContext'\nimport GlobalStyle from '@theme/Global'\nimport Sidebar from '@components/shared/Sidebar'\nimport Header from '@components/Header'\nimport Footer from '@components/Footer'\nimport mixins from '@theme/mixins'\nimport { fontSizes } from '@theme/styles'\nimport mediaMin from '@theme/media'\n\ninterface DataProps {\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string,\n        bannerImage?: any,\n        bannerTitle: string,\n        bannerSubTitle: string,\n        isBannerDark: boolean\n      }\n      html: string\n    }\n  }\n}\n\nconst ArticleMain = styled.div`\n  blockquote{\n    ${mixins.grid()};\n    margin: 0;\n  }\n\n  p{\n    ${mixins.muli};\n  }\n\n  h1{\n    margin-bottom: 3rem;\n    font-size: ${fontSizes.xl};\n    ${mixins.teko};\n    ${mediaMin.sm`font-size: ${fontSizes.xxl}`};\n  }\n\n  img{\n    box-shadow: none !important;\n  }\n  div{\n    margin: 4rem 0;\n    max-width: 50rem;\n  }\n  \n\n  .gatsby-resp-image-wrapper{\n    height: 100%;\n    \n  }\n  .gatsby-resp-image-background-image{\n    background-image: none !important;\n    background-color: ${({ theme }) => theme.surface};\n    box-shadow: 1px 4px 6px -1px rgba(0, 0, 0, 0.1), 1px 2px 4px -1px rgba(0, 0, 0, 0.06);\n\n  }\n  .gatsby-resp-image-link{\n    height: 100%;\n    display: flex !important;\n    flex-direction: column;\n    justify-content: center;\n  }\n  img.gatsby-resp-image-image{\n    height: auto !important;\n    top: initial !important;\n  }\n`\n\nconst ArticlePage: React.FC<DataProps> = ({ data }) => {\n  const { frontmatter, html } = data.markdownRemark\n  const { title, bannerImage, bannerTitle, bannerSubTitle, isBannerDark } = frontmatter\n  return (\n    <ThemedContext>\n      <GlobalStyle />\n      <SEO title={title} />\n      <Layout>\n        <Header />\n        <Content>\n          {bannerImage && bannerImage.childImageSharp.fluid && <Banner isBackgroundDark={isBannerDark}>\n            <Image fluid={bannerImage.childImageSharp.fluid} />\n            {bannerTitle && <BannerTitle>{bannerTitle}</BannerTitle>}\n            {bannerSubTitle && <BannerSubTitle>{bannerSubTitle}</BannerSubTitle>}\n          </Banner> }\n          <ArticleMain dangerouslySetInnerHTML={{ __html: html }} />\n        </Content>\n        <Sidebar />\n        <Footer />\n      </Layout>\n    </ThemedContext>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        bannerImage {\n             childImageSharp {\n                fluid(maxWidth: 800, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n        }\n        bannerTitle\n        bannerSubTitle\n        isBannerDark\n      }\n    }\n  }\n`;\n\nexport default ArticlePage\n"],"sourceRoot":""}