{"version":3,"sources":["webpack:///./src/sections/Intro.tsx","webpack:///./src/sections/Featured.tsx","webpack:///./src/utils/index.ts","webpack:///./src/sections/Archive.tsx","webpack:///./src/pages/index.tsx"],"names":["Headline","styled","h1","fonts","muli","props","theme","bw","mixins","heading","mediaMin","sm","lg","CTA","div","IntroTextContainer","IntroContainer","themes","light","ImageContainer","Statement","md","inlineLink","Line","SocialContainer","Intro","intro","edges","node","frontmatter","welcomeMessage","profilePic","id","dangerouslySetInnerHTML","__html","html","socials","map","social","index","key","title","name","href","url","target","rel","Image","fluid","childImageSharp","SkillList","Skill","span","roboto","featured","featuredToShow","style","minHeight","SectionHeader","feature","description","image","skills","external","github","blog","darkCover","Banner","alignment","data-sal","data-sal-duration","data-sal-easing","isBackgroundDark","skill","to","hex2rgba","hex","alpha","parseInt","slice","ArchiveGrid","grid","ArchiveCard","ArchiveHeader","ArchiveHeaderTag","color","ArchiveHeaderLink","a","ArchiveTitle","p","ArchiveDescription","ArchiveTag","Projects","itemsToShow","archive","archiveItem","iconColor","icon","tags","size","tag","query","IndexPage","data","useEffect","console","log","Global","Layout","Header","Content","Featured","Archive","Sidebar","Footer"],"mappings":"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","file":"component---src-pages-index-tsx-95348fbe2e94e3b05d21.js","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport { fonts, breakpoints, themes } from '@theme/styles'\nimport mixins from '@theme/mixins'\nimport Image from '@components/shared/Image'\nimport { socials } from '@config';\nimport mediaMin from '@theme/media'\nimport Icon from '@components/shared/Icons'\n\nexport const Headline = styled.h1`\n  font-family: ${fonts.muli};\n  color: ${props => props.theme.bw};\n  z-index: 4;\n  color: black;\n  filter: blur(0.2px);\n  grid-area: 1 / 1 / -1 / -1;\n  \n  ${mixins.heading}\n  ${mediaMin.sm`\n    grid-column: 1 / 1;\n    grid-row: 1 / auto;`\n  }\n\n  ${mediaMin.lg`\n    grid-column: 1 / 1;\n    grid-row: 1 / auto;\n  `}\n`\nexport const CTA = styled.div`\n ${mediaMin.sm`\n    grid-column: 1 / -1;\n    grid-row: 2 / auto;\n    `\n  }\n  ${mediaMin.lg`\n    grid-column: 1 / -1;\n    grid-row: 2 / auto;`\n  }\n`\n\nexport const IntroTextContainer = styled.div`\n display: grid;\n grid-template-columns: 1fr;\n grid-template-rows: auto auto;\n \n ${mediaMin.sm`\n   grid-column: 2 / 5;\n   grid-row: 2 / auto;\n   `\n }\n \n ${mediaMin.lg`\n   grid-column: 1 / 6;\n   grid-row: 2 / auto;\n   `\n }\n`\n\nexport const IntroContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  \n  ${mediaMin.sm`\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(4, minmax(calc((100vmin - 64px) / 4),150px));\n  `\n  }\n  \n  ${mediaMin.lg`\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(4, minmax(calc((100vmin - 64px) / 4), 200px));\n  `\n  }\n  \n  ${Headline}:nth-child(2) {\n    z-index: 9;\n    color: white;\n    mix-blend-mode: color-dodge;\n  }\n  ${Headline}:nth-child(3) {\n    z-index: 10;\n    mix-blend-mode: exclusion;\n    color: ${props => (props.theme == themes.light ? 'black' : 'white')};\n  }\n`\n   \nexport const ImageContainer = styled.div`\n   z-index: 5;\n   position: relative;\n   filter: contrast(90%);\n   grid-column: 1 / 1;\n   grid-row: 2 / 2;\n   & > div {\n       img {\n         background: #06d6a0;\n       }\n   }\n   ${mediaMin.sm`\n     grid-column: 4 / span 2;\n     grid-row: 2 / auto;\n     & > div {\n       overflow: visible !important;\n       &::before {\n         position: absolute;\n         content: '';\n         display: block;\n         border: 2px solid #06d6a0;\n         top: 1.5rem;\n         left: 1.5rem;\n         height: 100%;\n         width: 100%;\n       }\n     }\n     `\n   }\n   \n   ${mediaMin.lg`\n     grid-column: 5 /8;\n     grid-row: 2 / auto;\n     `\n   }\n`\n   \nconst Statement = styled.div`\nposition: relative;\n  max-width: 75%;\n  z-index: 10;\n  p{\n    ${mediaMin.md`font-size: 1.2rem;`}\n    a{\n      ${mixins.inlineLink}\n    }\n  }\n`\nconst Line = styled.div`\n  height: 1px;\n  width: 80px;\n  background-color: gray;\n`\n\nexport const SocialContainer = styled.div`\n  display: table;\n  padding: 1rem 0;\n  a {\n    margin-right: 0.8rem;\n  }\n`\n\n\n\nexport interface IntroProps {\n  intro: {\n    edges:[\n      {\n        node: {\n          frontmatter: {\n            welcomeMessage: string\n            profilePic: {\n              childImageSharp: {\n                fluid: any;\n              }\n            }\n          }\n          html: string\n        }\n      }\n    ]\n  },\n}\n\nconst Intro: React.FC<IntroProps> = ({ intro }) => {\n  const introduction = intro.edges[0].node;\n  const { welcomeMessage, profilePic } = introduction.frontmatter;\n\n  return (<section id=\"introduction\">\n    <IntroContainer>\n      <IntroTextContainer>\n        <Headline>\n          {welcomeMessage}\n        </Headline>\n        <Headline>\n          {welcomeMessage}\n        </Headline>\n        <Headline>\n          {welcomeMessage}\n        </Headline>\n\n        <CTA>\n          <Statement dangerouslySetInnerHTML={{__html: intro.edges[0].node.html}}/>\n\n          <Line />\n          <SocialContainer>\n            {socials.map((social: Record<string, string>, index: number) => <a key={index} title={`${social.name} Link`} href={social.url} target='_blank' rel='noreferrer' ><Icon name={social.name as IconName} /></a>)}\n          </SocialContainer>\n        </CTA>\n\n      </IntroTextContainer>\n      <ImageContainer>\n        <Image fluid={profilePic.childImageSharp.fluid} />\n      </ImageContainer>\n    </IntroContainer>\n  </section>)\n}\n\nexport default Intro\n","import React from 'react'\nimport styled from 'styled-components'\nimport Banner, { BannerLinks, BannerSubTitle, BannerTitle, BorderedButton } from '../components/shared/Banner'\nimport SectionHeader from '../components/shared/SectionHeader'\nimport { GitHub, ExternalLink } from 'react-feather'\nimport Image from '../components/shared/Image'\nimport mixins from '@theme/mixins'\n\nexport interface FeaturedProps {\n  featured: {\n    edges: [\n      {\n        node: {\n          frontmatter: {\n            title: string\n            description: String\n            external?: string\n            github?: string\n            blog?: string\n            darkCover: boolean\n            skills: [string]\n            image: {\n              childImageSharp: {\n                fluid: any;\n              }\n            }\n          }\n        }\n      }\n    ]\n  }\n}\nconst SkillList = styled.div`\n  display: block;\n  margin: 2rem 0;\n`\n\nconst Skill = styled.span`\n  ${mixins.roboto}\n  margin-right: 1rem;\n`\n\n\nconst featured: React.FC<FeaturedProps> = ({ featured }) => {\n\n  const featuredToShow = featured.edges.map(({ node }) => node);\n\n  return (<section id='featured'  style={{minHeight: '100vh'}}>\n    <SectionHeader>Featured Projects</SectionHeader>\n    {\n      featuredToShow.map((feature, index) => {\n\n        const { frontmatter } = feature;\n        const { title, description, image, skills, external, github, blog, darkCover } = frontmatter;\n\n        return (<Banner alignment=\"left\" key={index} data-sal=\"slide-up\"  data-sal-duration=\"300\" data-sal-easing=\"ease-out\" isBackgroundDark={darkCover}>\n          <Image title={title} fluid={image.childImageSharp.fluid} />\n          <BannerTitle>{title}</BannerTitle>\n          <BannerSubTitle>{description}</BannerSubTitle>\n          <SkillList>\n            {skills.map((skill, index) => <Skill key={index}>{skill}</Skill>)}\n          </SkillList>\n          <BannerLinks>\n            {blog && <BorderedButton to={blog}>Read More</BorderedButton>}\n            {github && <a title=\"GitHub Repo\" href={github} target='_blank' rel='noreferrer' ><GitHub /></a>}\n            {external && <a title=\"Demo site\" href={external} target='_blank' rel='noreferrer' ><ExternalLink /></a>}\n          </BannerLinks>\n        </Banner>\n        )\n      })\n    }\n  </section>)\n}\n\nexport default featured;","export const hex2rgba = (hex: string, alpha = 1) => {\n  const r = parseInt(hex.slice(1, 3), 16)\n  const g = parseInt(hex.slice(3, 5), 16)\n  const b = parseInt(hex.slice(5, 7), 16)\n\n  return `rgba(${r},${g},${b},${alpha})`\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, GitHub, Edit3 } from 'react-feather'\nimport mixins from '@theme/mixins'\nimport SectionHeader from '@components/shared/SectionHeader'\nimport { hex2rgba } from '@utils/'\n\nconst ArchiveGrid = styled.div`\n  ${mixins.grid(\"repeat(auto-fill, minmax(300px, 25vw))\")}\n`\n\nconst ArchiveCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 5rem;\n  padding: 1rem;\n  z-index: 3;\n  transition: all 0.3s ease-in-out;\n  border: 0.5px solid rgba(0, 0, 0, 0.06);\n  box-shadow: 1px 4px 6px -1px rgba(0, 0, 0, 0.1), 1px 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:hover{\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.1);\n    transform: translateY(-6px);\n  }\n`\n\nconst ArchiveHeader = styled.div`\n  display: flex;\n  height: 3rem;\n\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`\n\nconst ArchiveHeaderTag = styled.div<{color?: string}>`\n\n  height: 3rem;\n  width: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius:50%;\n  background-color: ${props => hex2rgba(props.color || '#000000', 0.2)};\n  svg {\n    stroke:  ${props => hex2rgba(props.color || '#000000', 0.95)};\n  }\n\n`\n\nconst ArchiveHeaderLink = styled.a`\n\n`\n\nconst ArchiveTitle = styled.p`\n   ${mixins.muli};\n   font-size: 1.5rem;\n`\nconst ArchiveDescription = styled.div`\n   p{\n    ${mixins.muli}\n    a{\n      ${mixins.inlineLink}\n    }\n  }\n`\n\nconst ArchiveTag = styled.span`\n  ${mixins.roboto}\n  &:not(:first-child)::before{\n    content: \" · \"\n  }\n`\n\nexport interface ArchiveProps {\n  archive: {\n    edges: [\n      {\n        node :{\n          frontmatter: {\n            icon: string;\n            iconColor?: string;\n            title:string\n            tags: [string]\n            external? :string\n            internal?: string\n            github?: string\n          }\n          html: string\n        }\n      }\n    ]\n  }\n}\n\nconst Projects: React.FC<ArchiveProps> = ({ archive }) => {\n  const itemsToShow = archive.edges.map(({ node }) => node);\n\n  return (<section id=\"archive\">\n    <SectionHeader>Other Projects/Links</SectionHeader>\n    <ArchiveGrid>\n    {itemsToShow.map((archiveItem, index) => { \n      const { title, icon, iconColor, tags } = archiveItem.frontmatter;\n      return <ArchiveCard key={index}>\n        <ArchiveHeader>\n          <ArchiveHeaderTag color={iconColor}>\n            <Edit3 size={30}/>\n          </ArchiveHeaderTag>\n          <ArchiveHeaderLink><GitHub/></ArchiveHeaderLink>\n        </ArchiveHeader>\n        <div>\n          <ArchiveTitle>{title}</ArchiveTitle>\n          <ArchiveDescription dangerouslySetInnerHTML={{__html: archiveItem.html}}></ArchiveDescription>\n        </div>\n         <div> {tags.map((tag, index) => <ArchiveTag key={index}>{tag}</ArchiveTag>)}</div>\n      </ArchiveCard>\n    } )}\n    </ArchiveGrid>\n  </section>)\n}\n\nexport default Projects\n","import React, { useEffect } from 'react'\nimport { graphql, PageProps } from \"gatsby\";\nimport SEO from '@components/shared/seo'\nimport Layout from '@components/shared/Layout'\nimport Content from '@components/shared/Content'\nimport Intro, { IntroProps} from '@sections/Intro'\nimport ThemedContext from '@theme/ThemeContext'\nimport Featured, {FeaturedProps}from '@sections/Featured'\nimport GlobalStyle from '@theme/Global'\nimport Sidebar from '@components/shared/Sidebar'\nimport Archive, { ArchiveProps } from '@sections/Archive'\nimport Header from '@components/Header'\nimport Footer from '@components/Footer'\n\ninterface DataProps extends ArchiveProps, FeaturedProps, IntroProps {}\n\n\nconst IndexPage: React.FC<PageProps<DataProps>> = ({ data }) => {\n  useEffect(() => {\n    console.log(`\n    #     #                              #######                             ### \n    #     # ###### #      #      ######     #    #    # ###### #####  ###### ### \n    #     # #      #      #      #    #     #    #    # #      #    # #      ### \n    ####### #####  #      #      #    #     #    ###### #####  #    # #####   #  \n    #     # #      #      #      #    #     #    #    # #      #####  #          \n    #     # #      #      #      #    #     #    #    # #      #   #  #      ### \n    #     # ###### ###### ###### ######     #    #    # ###### #    # ###### ### `)\n  })\n  return (\n    <ThemedContext>\n      <GlobalStyle />\n      <SEO title=\"Home\" />\n      <Layout>\n        <Header />\n        <Content>\n          <Intro intro={data.intro} />\n          <Featured featured={data.featured} />\n          <Archive archive={data.archive}/>\n        </Content>\n        <Sidebar />\n        <Footer/>\n      </Layout>\n    </ThemedContext>\n  )\n}\n\nexport const query = graphql`\n  {\n    featured:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/featured/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            title\n            description\n            external\n            github\n            blog\n            skills\n            darkCover\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1200, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            } \n          }\n        }\n      }\n    },\n    intro:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/intro/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            profilePic{\n              childImageSharp {\n                fluid(maxWidth: 800, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            welcomeMessage\n          }\n          html\n        }\n      }\n    },\n    about:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/about/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            title\n            linkToResume\n          }\n          html\n        }\n      }\n    },\n    archive:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/archive/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            icon\n            iconColor\n            title\n            description\n            tags\n            external\n            internal\n            github\n          }\n          html\n        }\n      }\n    },\n   \n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}