{"version":3,"sources":["webpack:///./src/sections/Intro.tsx","webpack:///./src/sections/Featured.tsx","webpack:///./src/sections/Archive.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/shared/SectionHeader.tsx"],"names":["Headline","styled","h1","fonts","muli","theme","onBackground","mixins","heading","mediaMin","sm","lg","CTA","div","IntroTextContainer","IntroContainer","IntroWrapper","flexCenter","ImageContainer","primary","Statement","md","inlineLink","Line","SocialContainer","Intro","intro","edges","node","frontmatter","welcomeMessage","profilePic","id","dangerouslySetInnerHTML","__html","html","socials","map","social","index","key","title","name","href","url","target","rel","Image","fluid","childImageSharp","featured","featuredToShow","style","minHeight","SectionHeader","feature","description","image","skills","external","github","blog","darkCover","Banner","alignment","data-sal","data-sal-duration","data-sal-easing","isBackgroundDark","skill","to","ArchiveGrid","grid","ArchiveCard","surface","transitionAll","ArchiveHeader","flexBetween","ArchiveHeaderTag","color","hex2rgba","ArchiveTitle","p","fontSizes","xl","ArchiveDescription","ArchiveTag","span","roboto","LinkWrapper","Projects","itemsToShow","archive","archiveItem","icon","iconColor","tags","internal","size","tag","query","IndexPage","data","useEffect","console","log","Global","Layout","Header","Content","Featured","Archive","Sidebar","Footer","teko","xxl","contentBefore"],"mappings":"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","file":"component---src-pages-index-tsx-f4691a4714dd02efc6c7.js","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport Image from '@components/shared/Image'\nimport Icon from '@components/shared/Icons'\nimport mixins from '@theme/mixins'\nimport mediaMin from '@theme/media'\nimport { fonts, themes } from '@theme/styles'\nimport { socials } from '@config';\n\nconst Headline = styled.h1`\n  font-family: ${fonts.muli};\n  z-index: 4;\n  color: ${({theme}) => theme.onBackground};\n  filter: blur(0.2px);\n  grid-area: 1 / 1 / -1 / -1;\n  \n  ${mixins.heading}\n  ${mediaMin.sm`\n    grid-column: 1 / 1;\n    grid-row: 1 / auto;`\n  }\n\n  ${mediaMin.lg`\n    grid-column: 1 / 1;\n    grid-row: 1 / auto;\n  `}\n`\n const CTA = styled.div`\n ${mediaMin.sm`\n    grid-column: 1 / -1;\n    grid-row: 2 / auto;\n    `\n  }\n  ${mediaMin.lg`\n    grid-column: 1 / -1;\n    grid-row: 2 / auto;`\n  }\n`\n\nconst IntroTextContainer = styled.div`\n display: flex;\n flex-direction: column;\n \n`\n\nconst IntroContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  ${mediaMin.sm`\n    grid-template-columns: 60% 40%;\n    grid-column-gap: 1rem;\n  `\n  }\n    \n`\n\nconst IntroWrapper = styled.div`\n  ${mixins.flexCenter};\n  width: 100%;\n  min-height: calc(100vmin - 64px);\n  position: relative;\n\n`\n   \nconst ImageContainer = styled.div`\n   z-index: 5;\n   position: relative;\n   filter: contrast(90%);\n\n   & > div {\n\n       img {\n         background: ${({theme}) => theme.primary};\n       }\n   }\n   ${mediaMin.sm`\n\n     & > div {\n       overflow: visible !important;\n       &::before {\n         position: absolute;\n         content: '';\n         display: block;\n         top: 1rem;\n         left: 1rem;\n         height: 100%;\n         width: 100%;\n         border: 2px solid ${({theme})=> theme.primary};\n\n       }\n     }\n     `\n   }\n  \n`\n   \nconst Statement = styled.div`\n  position: relative;\n  max-width: 75%;\n\n  p{\n    ${mediaMin.md`font-size: 1.2rem;`}\n    a{\n      ${mixins.inlineLink}\n    }\n  }\n`\nconst Line = styled.div`\n  height: 1px;\n  width: 80px;\n  background-color: ${({theme}) => theme.onBackground};\n`\n\nconst SocialContainer = styled.div`\n  display: table;\n  padding: 1rem 0;\n  a {\n    margin-right: 0.8rem;\n  }\n`\n\n\n\nexport interface IntroProps {\n  intro: {\n    edges:[\n      {\n        node: {\n          frontmatter: {\n            welcomeMessage: string\n            profilePic: {\n              childImageSharp: {\n                fluid: any;\n              }\n            }\n          }\n          html: string\n        }\n      }\n    ]\n  },\n}\n\nconst Intro: React.FC<IntroProps> = ({ intro }) => {\n  const introduction = intro.edges[0].node;\n  const { welcomeMessage, profilePic } = introduction.frontmatter;\n\n  return (<section id=\"introduction\">\n      <IntroWrapper>\n    <IntroContainer>\n        <IntroTextContainer>\n          <Headline>\n            {welcomeMessage}\n          </Headline>\n        <CTA>\n            <Statement dangerouslySetInnerHTML={{__html: intro.edges[0].node.html}}/>\n\n            <Line />\n            <SocialContainer>\n              {socials.map((social: Record<string, string>, index: number) => <a key={index} title={`${social.name} Link`} href={social.url} target='_blank' rel='noreferrer' ><Icon name={social.name as IconName} /></a>)}\n            </SocialContainer>\n          </CTA>\n\n        </IntroTextContainer>\n        <ImageContainer>\n          <Image fluid={profilePic.childImageSharp.fluid} />\n        </ImageContainer>\n    </IntroContainer>\n      </IntroWrapper>\n  </section>)\n}\n\nexport default Intro\n","import React from 'react'\nimport styled from 'styled-components'\nimport Banner, { BannerLinks, BannerSubTitle, BannerTitle, BorderedButton, Skill, SkillList } from '../components/shared/Banner'\nimport SectionHeader from '../components/shared/SectionHeader'\nimport { GitHub, ExternalLink } from 'react-feather'\nimport Image from '../components/shared/Image'\nimport mixins from '@theme/mixins'\n\nexport interface FeaturedProps {\n  featured: {\n    edges: [\n      {\n        node: {\n          frontmatter: {\n            title: string\n            description: String\n            external?: string\n            github?: string\n            blog?: string\n            darkCover: boolean\n            skills: [string]\n            image: {\n              childImageSharp: {\n                fluid: any;\n              }\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n\n\n\nconst featured: React.FC<FeaturedProps> = ({ featured }) => {\n\n  const featuredToShow = featured.edges.map(({ node }) => node);\n\n  return (<section id='featured'  style={{minHeight: '100vh'}}>\n    <SectionHeader>Featured Projects</SectionHeader>\n    {\n      featuredToShow.map((feature, index) => {\n\n        const { frontmatter } = feature;\n        const { title, description, image, skills, external, github, blog, darkCover } = frontmatter;\n\n        return (<Banner alignment=\"left\" key={index} data-sal=\"slide-up\"  data-sal-duration=\"300\" data-sal-easing=\"ease-out\" isBackgroundDark={darkCover}>\n          <Image title={title} fluid={image.childImageSharp.fluid} />\n          <BannerTitle>{title}</BannerTitle>\n          <BannerSubTitle>{description}</BannerSubTitle>\n          <SkillList>\n            {skills.map((skill, index) => <Skill key={index}>{skill}</Skill>)}\n          </SkillList>\n          <BannerLinks>\n            {blog && <BorderedButton to={blog}>Read More</BorderedButton>}\n            {github && <a title=\"GitHub Repo\" href={github} target='_blank' rel='noreferrer' ><GitHub /></a>}\n            {external && <a title=\"Demo site\" href={external} target='_blank' rel='noreferrer' ><ExternalLink /></a>}\n          </BannerLinks>\n        </Banner>\n        )\n      })\n    }\n  </section>)\n}\n\nexport default featured;","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Icon, { IconName } from '@components/shared/Icons'\nimport { fontSizes } from '@theme/styles'\nimport mixins from '@theme/mixins'\nimport SectionHeader from '@components/shared/SectionHeader'\nimport { hex2rgba } from '@utils/'\n\nconst ArchiveGrid = styled.div`\n  ${mixins.grid(\"repeat(auto-fill, minmax(300px, 1fr))\")}\n`\n\nconst ArchiveCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 5rem;\n  padding: 1rem;\n  z-index: 3;\nbackground: ${({theme})=> theme.surface};\n  ${mixins.transitionAll};\n  border: 0.5px solid rgba(0, 0, 0, 0.06);\n  box-shadow: 1px 4px 6px -1px rgba(0, 0, 0, 0.1), 1px 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:hover{\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.1);\n    transform: translateY(-6px);\n  }\n`\n\nconst ArchiveHeader = styled.div`\n  height: 3rem;\n  ${mixins.flexBetween};\n  /* display: flex;\n  align-items: center;\n  justify-content: space-between; */\n  margin-bottom: 1rem;\n`\n\nconst ArchiveHeaderTag = styled.div<{color?: string}>`\n  height: 3rem;\n  width: 3rem;\n  ${mixins.flexCenter};\n\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n  border-radius:50%;\n  background-color: ${({color}) => hex2rgba(color || '#000000', 0.2)};\n  svg {\n    stroke:  ${({color}) => hex2rgba(color || '#000000', 0.95)};\n  }\n\n`\n\n\nconst ArchiveTitle = styled.p`\n   ${mixins.muli};\n   font-size: ${fontSizes.xl};\n`\nconst ArchiveDescription = styled.div`\n   p{\n    ${mixins.muli}\n    a{\n      ${mixins.inlineLink}\n    }\n  }\n`\n\nconst ArchiveTag = styled.span`\n  ${mixins.roboto}\n  &:not(:first-child)::before{\n    content: \" · \"\n  }\n`\nconst LinkWrapper = styled.div`\n  a{\n    margin-left: 0.5rem;\n  }\n`\n\n\nexport interface ArchiveProps {\n  archive: {\n    edges: [\n      {\n        node :{\n          frontmatter: {\n            icon: IconName;\n            iconColor?: string;\n            title:string\n            tags: [string]\n            external? :string\n            internal?: string\n            github?: string\n          }\n          html: string\n        }\n      }\n    ]\n  }\n}\n\nconst Projects: React.FC<ArchiveProps> = ({ archive }) => {\n  const itemsToShow = archive.edges.map(({ node }) => node);\n\n  return (<section id=\"archive\">\n    <SectionHeader>Other Projects/Links</SectionHeader>\n    <ArchiveGrid>\n    {itemsToShow.map((archiveItem, index) => { \n      const { title, icon, iconColor, tags, github, external, internal } = archiveItem.frontmatter;\n      return <ArchiveCard key={index}>\n        <ArchiveHeader>\n          <ArchiveHeaderTag color={iconColor}>\n            <Icon name={icon} size={30}/>\n          </ArchiveHeaderTag>\n          <LinkWrapper>\n            { github && <a href={github} target=\"_blank\" rel='noreferrer'><Icon name={\"GitHub\"} /></a>}\n            { external && <a href={internal} target=\"_blank\" rel='noreferrer'><Icon name={\"ExternalLink\"} /></a>}\n            { internal && <Link to={internal}><Icon name={\"Link\"} /></Link>}\n          </LinkWrapper>\n        </ArchiveHeader>\n        <div>\n          <ArchiveTitle>{title}</ArchiveTitle>\n          <ArchiveDescription dangerouslySetInnerHTML={{__html: archiveItem.html}}></ArchiveDescription>\n        </div>\n         <div> {tags.map((tag, index) => <ArchiveTag key={index}>{tag}</ArchiveTag>)}</div>\n      </ArchiveCard>\n    } )}\n    </ArchiveGrid>\n  </section>)\n}\n\nexport default Projects\n","import React, { useEffect } from 'react'\nimport { graphql, PageProps } from \"gatsby\";\nimport SEO from '@components/shared/seo'\nimport Layout from '@components/shared/Layout'\nimport Content from '@components/shared/Content'\nimport Intro, { IntroProps} from '@sections/Intro'\nimport ThemedContext from '@theme/ThemeContext'\nimport Featured, {FeaturedProps}from '@sections/Featured'\nimport GlobalStyle from '@theme/Global'\nimport Sidebar from '@components/shared/Sidebar'\nimport Archive, { ArchiveProps } from '@sections/Archive'\nimport Header from '@components/Header'\nimport Footer from '@components/Footer'\n\ninterface DataProps extends ArchiveProps, FeaturedProps, IntroProps {}\n\n\nconst IndexPage: React.FC<PageProps<DataProps>> = ({ data }) => {\n  useEffect(() => {\n    console.log(`\n    #     #                              #######                             ### \n    #     # ###### #      #      ######     #    #    # ###### #####  ###### ### \n    #     # #      #      #      #    #     #    #    # #      #    # #      ### \n    ####### #####  #      #      #    #     #    ###### #####  #    # #####   #  \n    #     # #      #      #      #    #     #    #    # #      #####  #          \n    #     # #      #      #      #    #     #    #    # #      #   #  #      ### \n    #     # ###### ###### ###### ######     #    #    # ###### #    # ###### ### `)\n  })\n  return (\n    <ThemedContext>\n      <GlobalStyle />\n      <SEO title=\"Home\" />\n      <Layout>\n        <Header />\n        <Content>\n          <Intro intro={data.intro} />\n          <Featured featured={data.featured} />\n          <Archive archive={data.archive}/>\n        </Content>\n        <Sidebar />\n        <Footer/>\n      </Layout>\n    </ThemedContext>\n  )\n}\n\nexport const query = graphql`\n  {\n    featured:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/featured/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            title\n            description\n            external\n            github\n            blog\n            skills\n            darkCover\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1200, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            } \n          }\n        }\n      }\n    },\n    intro:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/intro/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            profilePic{\n              childImageSharp {\n                fluid(maxWidth: 800, quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            welcomeMessage\n          }\n          html\n        }\n      }\n    },\n    about:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/about/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            title\n            linkToResume\n          }\n          html\n        }\n      }\n    },\n    archive:allMarkdownRemark(filter: {\n      fileAbsolutePath: { regex: \"/archive/\" }\n    }){\n      edges {\n        node {\n          frontmatter{\n            icon\n            iconColor\n            title\n            description\n            tags\n            external\n            internal\n            github\n          }\n          html\n        }\n      }\n    },\n   \n  }\n`\n\nexport default IndexPage\n","import React from 'react'\nimport styled from 'styled-components'\nimport mixins from '@theme/mixins'\nimport { fontSizes } from '@theme/styles'\nimport mediaMin from '@theme/media'\n\nconst SectionHeader = styled.p<{ contentBefore?: string }>`\n  ${mixins.teko}\n  display: flex;\n  position: relative;\n  align-items:center;\n  padding-top: 3rem;\n  margin-bottom: 5rem;\n  font-size: ${fontSizes.xl};\n  ${mediaMin.sm` font-size: ${fontSizes.xxl}`}\n\n  &::before{\n    position: relative;\n    color: ${({theme}) => theme.primary};\n    counter-increment: section;\n    content: ${({contentBefore}) => contentBefore || '\"0\" counter(section) \". \"'}\n  }\n\n  ${mediaMin.sm`\n    &::after{\n      content:'';\n      display: block;\n      position: relative;\n      top: 50%;\n      height: 1px;\n      width: 100%;\n      max-width: 200px;\n      margin-left: 1rem;\n      background-color: gray;\n    }`\n  }\n`\n\nexport default SectionHeader"],"sourceRoot":""}