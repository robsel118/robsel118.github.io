{"version":3,"sources":["webpack:///./src/components/shared/Banner.ts","webpack:///./src/components/shared/Grid.ts","webpack:///./src/templates/article.tsx"],"names":["BannerTitle","styled","h1","media","tablet","BannerSubTitle","p","Banner","div","alignment","mobile","Image","Grid","props","columns","ArticleMain","mixins","grid","laptop","inlineLink","display","pageQuery","ArticlePage","mdx","data","frontmatter","body","title","bannerImage","bannerTitle","bannerSubTitle","Global","Layout","Header","Content","childImageSharp","fluid","components","wrapper","Sidebar","Footer"],"mappings":"+kBAIO,IAAMA,EAAcC,IAAOC,GAAV,sEAAGD,CAAH,8EAKpBE,IAAMC,OALc,MAWXC,EAAiBJ,IAAOK,EAAV,yEAAGL,CAAH,yGAKvBE,IAAMC,OALiB,MAsCZG,EAzBAN,IAAOO,IAAV,yDAAGP,CAAH,mRAIK,qBAAGQ,WAA6B,WAM7CN,IAAMO,OAVE,KAYRC,K,mJCrCJ,IAOeC,EAPFX,IAAOO,IAAV,0DAAGP,CAAH,6DAINE,IAAMC,OAJA,KAIuC,SAAAS,GAAK,OAAGA,EAAMC,Y,8SC0B/D,IAAMC,EAAcd,IAAOO,IAAV,2EAAGP,CAAH,sQAUXe,IAAOC,KACPd,IAAMe,OAXK,KA0BTF,IAAOG,WAKTH,IAAOI,QACPjB,IAAMO,OAhCK,MAwEJW,EAAY,aAsBVC,UAhD0B,SAAC,GAAoB,IAAXC,EAAW,EAAlBC,KAAOD,IACzCE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAAoDF,EAApDE,MAAOC,EAA6CH,EAA7CG,YAAaC,EAAgCJ,EAAhCI,YAAaC,EAAmBL,EAAnBK,eACzC,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,CAAKJ,MAAOA,IACZ,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACGN,GAAeA,EAAYO,gBAAgBC,OAAS,kBAAC,EAAD,KACnD,kBAACzB,EAAA,EAAD,CAAOyB,MAAOR,EAAYO,gBAAgBC,QACzCP,GAAe,kBAAC7B,EAAD,KAAc6B,GAC7BC,GAAkB,kBAACzB,EAAD,KAAiByB,IAEtC,kBAAC,cAAD,CAAaO,WAAY,CAAEzB,SACzB,kBAAC,cAAD,CAAayB,WAAY,CAAEC,QAASvB,IAAiBW,KAGzD,kBAACa,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD","file":"component---src-templates-article-tsx-3ee8e2ddc5604fb368c9.js","sourcesContent":["import styled from 'styled-components'\nimport Image from './Image'\nimport media from '@theme/media'\n\nexport const BannerTitle = styled.h1`\n  font-size: var(--fs-h2);\n  line-height: 100%;\n  margin: 0 0;\n  color: var(--white);\n  ${media.tablet`\n    line-height: 3.5rem;\n    font-size: var(--fs-h1);\n  `}\n`\n\nexport const BannerSubTitle = styled.p`\n  font-size: var(--fs-md);\n  color: varyarn (--white);\n  font-weight: 500;\n  margin: 1rem 0 2.5rem 0 !important;\n  ${media.tablet`font-size: var(--fs-h4)`}\n`\n\ninterface BannerProps {\n  alignment?: string\n  isBackgroundDark?: boolean\n}\n\nconst Banner = styled.div<BannerProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: ${({ alignment }) => alignment || 'center'};\n  margin: 2rem 0;\n  min-height: 30rem;\n  position: relative;\n  padding: 1rem;\n\n  ${media.mobile`padding-left: 3rem;`}\n\n  ${Image} {\n    filter: brightness(75%);\n    position: absolute !important;\n    border-radius: 0;\n    margin: 0;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n`\n\nexport default Banner\n","import styled from 'styled-components'\nimport media from '../../theme/media'\n\nconst Grid = styled.div<{ columns: number }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 1rem;\n  ${media.tablet`grid-template-columns: repeat(${props=> props.columns}, 1fr);`}\n`\n\nexport default Grid;","import React from 'react'\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport SEO from '@components/shared/seo'\nimport Layout from '@components/shared/Layout'\nimport Content from '@components/shared/Content'\nimport Banner, { BannerTitle, BannerSubTitle } from '@components/shared/Banner'\nimport Image from '@components/shared/Image'\nimport Grid from '@components/shared/Grid'\nimport ThemedContext from '@theme/ThemeContext'\nimport GlobalStyle from '@theme/Global'\nimport Sidebar from '@components/shared/Sidebar'\nimport Header from '@components/Header'\nimport Footer from '@components/Footer'\nimport mixins from '@theme/mixins'\nimport media from '@theme/media'\n\ninterface DataProps {\n  data: {\n    mdx: {\n      frontmatter: {\n        title: string,\n        bannerImage: any,\n        bannerTitle: string,\n        bannerSubTitle: string,\n      }\n      body: string\n    }\n  }\n}\n\nconst ArticleMain = styled.div`\n  table {\n    width: 100%;\n  }\n\n  thead {\n    display: none;\n  }\n\n  tr{\n    ${mixins.grid};\n    ${media.laptop`grid-template-columns: repeat(2, 1fr);`};\n    margin: 1.5rem 0;\n  }\n\n  br{\n    content: \"\";\n    margin-bottom: 1em;\n    display: block;\n  }\n\n  p {\n    &, td {\n      line-height: 150%;\n    }\n    a{\n      ${mixins.inlineLink};\n    }\n  }\n\n  h2{\n    ${mixins.display};\n    ${media.mobile`font-size: var(--fs-h3)`};\n    font-size: var(--fs-md);\n    margin: 4rem 0 3rem 0;\n    & + p {\n      max-width: 50rem;\n    }\n  }\n\n  img{\n    box-shadow: none !important;\n  }\n\n`\n\nconst ArticlePage: React.FC<DataProps> = ({ data: {mdx} }) => {\n  const { frontmatter, body } = mdx\n  const { title, bannerImage, bannerTitle, bannerSubTitle } = frontmatter\n  return (\n    <ThemedContext>\n      <GlobalStyle />\n      <SEO title={title} />\n      <Layout>\n        <Header />\n        <Content>\n          {bannerImage && bannerImage.childImageSharp.fluid && <Banner>\n            <Image fluid={bannerImage.childImageSharp.fluid} />\n            {bannerTitle && <BannerTitle>{bannerTitle}</BannerTitle>}\n            {bannerSubTitle && <BannerSubTitle>{bannerSubTitle}</BannerSubTitle>}\n          </Banner> }\n          <MDXProvider components={{ Grid }}>\n            <MDXRenderer components={{ wrapper: ArticleMain }}>{ body }</MDXRenderer>\n          </MDXProvider>\n        </Content>\n        <Sidebar />\n        <Footer />\n      </Layout>\n    </ThemedContext>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    mdx( frontmatter: {\n      slug: {eq: $path}\n    }) {\n      body\n      frontmatter{\n        title\n        bannerTitle\n        bannerSubTitle\n        bannerImage {\n          childImageSharp {\n            fluid(maxWidth: 800, quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }        \n      }\n    } \n  }\n`;\n\nexport default ArticlePage\n"],"sourceRoot":""}